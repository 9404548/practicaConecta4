ULTIMA_FICHA_COLUMNA EQU $C001 ; Byte (0-6) de la última columna jugada
ULTIMA_FICHA_FILA EQU $C002    ; Byte (0-5) de la última fila jugada
TABLERO_ANCHO EQU 7
TABLERO_ALTO EQU 6
ESTADO_TABLERO EQU $D000
JUGADOR_aCTUAL EQU 

LC_COMPROBAR_FIN:
    PUSH AF : PUSH BC : PUSH DE : PUSH IX 
    ; VERIFICACIONES
    CALL LC_CHECK_VERTICAL
    JR C, FIN_DE_JUEGO_DETECTADO

    CALL LC_CHECK_HORIZONTAL
    JR C, FIN_DE_JUEGO_DETECTADO

    CALL LC_CHECK_DIAGONAL1
    JR C, FIN_DE_JUEGO_DETECTADO

    CALL LC_CHECK_DIAGONAL2
    JR C, FIN_DE_JUEGO_DETECTADO

    ; COMPROBAR SI HA GANADO UN JUGADOR

    ; COMPROBAR SI HAY EMPATE
LC_COMPROBAR_4ENLINEA:
    PUSH AF : PUSH BC : PUSH DE : PUSH IX 
    LD C,4  ; CONTADOR DE FICHAS A COMPROBAR
    LD E,0  ; CONTADOR DE FICHAS SEGUIDAS
COMPROBAR_BUCLE:
    LD D, (HL)  ; CARGAR COLOR DE LA CASILLA
    CP D    ; COMPARAR CON EL COLOR DEL JUGADOR ACTUAL
    JR NZ, NO_COINCIDE

    INC E   ; SI COINCIDE, INCREMENTA EL CONTADOR
    LD D,4  ; NUMERO DE FICHAS NECESARIAS PARA GANAR
    CP E    ; PARA VER SI LLEVAMOS 4 SEGUIDAS
    JR Z, HAY_VICTORIA
    JR COINCIDE_SIGUIENTE

COINCIDE_SIGUIENTE:
    PUSH BC
    LD B,0  ; BC = SALTO
    LD C,B  ; C = B (SALTO)
    ADD HL  ; HL = HL + SALTO
    POP BC

    DJNZ, COMPROBAR_BUCLE   ; SE REPITE 4 VECES (O LAS QUE SEAN NECESARIAS)

    AND A   ; LIMPIAR CARRY SI EL BUCLE TERMINA SIN VICTORIA
    JR FINALIZAR_CHECK

FINALIZAR_CHECK:
    POP IX: POP DE: POP HL
    RET
HAY_VICTORIA:
    SCF ; ACTIVA EL CARRY
NO_COINCIDE:
    LD E,0  ; REINICIA EL CONTADOR DE FICHAS SEGUIDAS


; SE COMPRUEBAN LAS POSICIONES DE LAS FICHAS VERTICAL, HORIZONTAL, DIAGONAL IZQ Y DIAGONAL DER

LC_CHECK_VERTICAL:
; SE COMPRUEBA HACIA ABAJO SOLO
    LD A, (ULTIMA_FICHA_FILA)
    LD B, TABLERO_ANCHO
    CALL MULTIPLY_A_B ; HL = FILA POR ANCHO
    LD A, (ULTIMA_FICHA_COLUMNA)
    ADD L   ; HL = FILA*ANCHO + COLUMNA
    LD HL, ESTADO_TABLERO
    ADD HL, DE  ; HL = DIRECCION DE LA ULTIMA FICHA

    LD A, ; AQUI IRIA EL JUGADOR ACTUAL
    LD B, TABLERO_ANCHO

    CALL LC_COMPROBAR_4ENLINEA

    POP HL: POP DE: POP BC: POP AF
    RET

; SE COMPRUEBA 4 FICHAS SEGUIDAS
LC_CHECK_HORIZONTAL:
    PUSH AF: PUSH BC: PUSH DE: PUSH HL
    ; SE CALCULA POSICION INICIAL DE LA FILA
    LD A, (ULTIMA_FICHA_FILA)
    LD B, TABLERO_ANCHO
    CALL MULTIPLY_A_B
    LD HL, ESTADO_TABLERO
    ADD HL, DE
    LD C,4  ; BUCLE DE 4 REPETICIONES

HORIZONTAL_BUCLE:
    PUSH HL
    LD A, ; AQUI LA DIRECCION DE MEMORIA DEL JUGADOR ACTUAL (EL COLOR A BUSCAR)
    LD B,1  ; SALTO HORIZONTAL = 1 BYTE
    CALL LC_COMPROBAR_4ENLINEA

    POP HL
    JR C, HORIZONTAL_VICTORIA   ; SI ES VICTORIA, SALIR

    INC HL  ; COLUMNA + 1
    DJNZ HORIZONTAL_BUCLE

HORIZONTAL_SIN_VICTORIA:
    AND A   ; C=0
    POP HL: POP DE: POP BC: POP AF
    RET
HORIZONTAL_VICTORIA:
    SCF
    POP HL: POP DE: POP BC: POP AF
    RET
MULTIPLY_A_B:
    PUSH AF : PUSH BC
    LD HL, 0
    LD C,A 
    LD A,0  ; CONTADOR
MULT_BUCLE:
    ADD HL,BC
    INC A
    CP C 
    JR NZ, MULT_BUCLE
    POP BC: POP AF
    RET
FIN_DE_JUEGO_DETECTADO:
    LD A,0
    POP AF : POP BC : POP DE : POP IX 
    RET
LC_VALIDPLAY:

LC_COMPROBAR_FIN:
