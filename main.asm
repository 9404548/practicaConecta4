    DEVICE ZXSPECTRUM48
    ORG $8000
    LD SP, 0
    LD A, 0 ; VALOR INICIAL DE A
    OUT ($FE), A ; COLOREA EL MARCO DE LA PANTALLA NEGRO
    JP INICIO

; CONSTANTES
CONTADOR EQU 255
NUM_FILAS EQU 24
NUM_COLS EQU 32

COLOR_TEXTO_AZUL EQU 1
COLOR_TEXTO_ROJO EQU 2
COLOR_TEXTO_AMARILLO EQU 6
BLINK EQU 128

; INCLUDES
    INCLUDE "colors.asm"
    INCLUDE "variables.asm"
    INCLUDE "keyboard.asm"
    INCLUDE "printat.asm"
    INCLUDE "graphics_basic.asm"
    INCLUDE "graphics_core.asm"
    INCLUDE "logic_flow.asm"
    INCLUDE "logic_checks.asm"

; INICIO DEL FLUJO DEL PROGRAMA FUNCIONAL
INICIO:
    CALL GB_BIENVENIDA ; DIBUJAR PANTALLA DE BIENVENIDA
    CALL K_SON ; RECIBIR LECTURA DE TECLADO
    LD A, D
    LD (CHAR_CARACTER), A ; GUARDA LA TECLA PULSADA
    LD A, COLOR_TEXTO_AMARILLO
    CALL GB_PRINT_CHAR_SON ; IMPRIME LA TECLA PULSADA
    LD A, (CHAR_CARACTER)
    CP 'S'
    CALL Z, LOGICA_JUEGO ; SI SE PULSO 'S', COMIENZA LA LOGICA DEL JUEGO
    CP 'N'
    CALL Z, ADIOS ; SI SE PULSO 'N', NOS DESPEDIMOS

ADIOS:
    CALL GB_ADIOS ; DIBUJA PANTALLA DE ADIOS
FINAL: ; COMIENZA EJECUCION DEL FINAL DEL JUEGO (DE MOMENTO NO HACE NADA NOTABLE EN REALIDAD)
    LD B, 10
    CALL ESPERAR
    DJNZ FINAL
    HALT

FIN_NEXT: ; TERMINO LA PARTIDA, OFRECEMOS OTRA O FINALIZAR
    CALL GB_FIN_NEXT ; DIBUJAR LA PANTALLA DE FIN + SIGUIENTE
    CALL K_SON ; RECIBIR ENTRADA DEL TECLADO S O N
    LD A, D
    CP 'S'
    CALL Z, LOGICA_JUEGO ; SI SE PULSO 'S', INICIAMOS NUEVO JUEGO 
    CP 'N'
    CALL Z, ADIOS ; SI SE PULSO 'N', NOS DESPEDIMOS

LOGICA_JUEGO:
    CALL GB_PTLLA_INICIO_DE_JUEGO ; DIBUJA LA PANTALLA DEL INICIO DEL JUEGO
    ; HALT
    CALL LF_INICIALIZACION ; INICIALIZA CONDICIONES DEL JUEGO
BUCLE_JUEGO:
    CALL LF_SWITCH_JUGADOR ; CAMBIA DE JUGADOR
GESTIONAR_JUGADA:
    CALL GC_COLOR_JUGADOR_ACTUAL ; MUESTRA POR PANTALLA EL JUGADOR ACTUAL
JUGADA:
    CALL K_LR_ENTER_F ; BUSCA ENTRADA (LEFT, RIGHT, ENTER, F PARA TERMINAR)
    LD A, D
    PUSH AF
    CALL LC_VALIDPLAY ; COMPRUEBA QUE LA TECLA PULSADA RESULTARIA EN UN MOVIMIENTO VALIDO
    CP 1
    JR Z, JUGADA ; SI NO FUE VALIDO, VOLVEMOS A ESPERAR A RECIBIR UNA JUGADA
    POP AF
    CP 'W'
    CALL Z, JUGADA_DESPLAZAMIENTO
    CP 'Q'
    CALL Z, JUGADA_DESPLAZAMIENTO
    CP 13
    CALL Z, GC_ENTER
    CP 'F'
    CALL Z, FIN_NEXT

COMPROBAR_FIN_JUEGO:
    CALL LC_COMPROBAR_FIN
    ; SI SE DETECTO EL FIN DEL JUEGO
    ; JR (CONDICION DE FIN), FIN_NEXT
    ; SI SE DETECTA QUE EL JUEGO SIGUE
    JR Z, FIN_NEXT
    JR BUCLE_JUEGO

ESPERAR:
    PUSH BC
    PUSH AF
    LD BC, CONTADOR
ESPERAR1: 
    DEC BC ; 6C
    LD A, B ; 4C
    OR C ; 4C
    NOP ; 4C
    JR NZ, ESPERAR1 ; 12C
    ; DURACION TOTAL = APPROX 0,49 SEG
    POP AF
    POP BC
    RET

COORD_ATRIB:
    ; PREREQUISITO: HABER SELECCIONADO UNA FILA Y UNA COLUMNA (H Y L) SOBRE LA QUE SE QUIERE OBTENER UNA DIRECCIÓN VIDEORAM
    ; H = FILA
    ; L = COLUMNA
    ; HL = DIRECCIÓN DE LA VIDEORAM

    PUSH AF
    LD A, H ; 0 0 0 H4 H3 H2 H1 H0
    SLA A: SLA A: SLA A: SLA A: SLA A ; H2 H1 H0 0 0 0 0 0
    OR L ; H2 H1 H0 L4 L3 L2 L1 L0
    LD A, H ; 0 0 0 H4 H3 H2 H1 H0
    SRA A: SRA A: SRA A; 0 0 0 0 0 0 H4 H3 
    OR $58 ; 0 1 0 1 1 0 H4 H3
    ; HL = 0 1 0 1 1 0 H4 H3 H2 H1 H0 L4 L3 L2 L1 L0
    POP AF
    RET

JUGADA_DESPLAZAMIENTO:
    CP 'W'
    CALL Z, GC_LEFT ; DESPLAZAMOS IZQUIERDA LA FICHA
    CP 'Q'
    CALL Z, GC_RIGHT ; DESPLAZAMOS DERECHA LA FICHA 
    JR JUGADA
